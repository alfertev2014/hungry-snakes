var x=Object.defineProperty;var R=(i,t,e)=>t in i?x(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var a=(i,t,e)=>(R(i,typeof t!="symbol"?t+"":t,e),e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const n of r)if(n.type==="childList")for(const h of n.addedNodes)h.tagName==="LINK"&&h.rel==="modulepreload"&&s(h)}).observe(document,{childList:!0,subtree:!0});function e(r){const n={};return r.integrity&&(n.integrity=r.integrity),r.referrerPolicy&&(n.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?n.credentials="include":r.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(r){if(r.ep)return;r.ep=!0;const n=e(r);fetch(r.href,n)}})();var o=(i=>(i[i.UP=0]="UP",i[i.RIGHT=1]="RIGHT",i[i.DOWN=2]="DOWN",i[i.LEFT=3]="LEFT",i))(o||{});const P=i=>{switch(i){case 0:return 2;case 1:return 3;case 2:return 0;case 3:return 1}},S=i=>{switch(i){case 1:return 1;case 3:return-1;default:return 0}},m=i=>{switch(i){case 0:return-1;case 2:return 1;default:return 0}};class D{constructor(t,e,s,r){a(this,"field");a(this,"_headX");a(this,"_headY");a(this,"_tailX");a(this,"_tailY");a(this,"_length");a(this,"_direction");a(this,"UP");a(this,"RIGHT");a(this,"DOWN");a(this,"LEFT");if(e<0||e>=t.width)throw new Error("Creating snake: headX is out of field dimention");if(s<0||s>=t.height)throw new Error("Creating snake: headY is out of field dimention");if(k(t.getCell(e,s)))throw new Error("Creating snake in place of already existing snake");this.field=t,this._headX=e,this._headY=s,this._tailX=e,this._tailY=s,this._length=1,this._direction=r,this.UP=new T(this,o.UP),this.RIGHT=new T(this,o.RIGHT),this.DOWN=new T(this,o.DOWN),this.LEFT=new T(this,o.LEFT),this._refreshHeadCell()}get length(){return this._length}get isDead(){return this._length<=0}get headX(){return this._headX}get headY(){return this._headY}get tailX(){return this._tailX}get tailY(){return this._tailY}get direction(){return this._direction}getSnakeCell(t){switch(t){case o.UP:return this.UP;case o.RIGHT:return this.RIGHT;case o.DOWN:return this.DOWN;case o.LEFT:return this.LEFT;default:throw new Error("Wrong direction!")}}_refreshHeadCell(){this.field.setCell(this._headX,this._headY,this.getSnakeCell(this._direction))}nextHeadCell(t){return this.field.getCell(this._headX+S(t),this._headY+m(t))}changeDirection(t){if(this.isDead)return!1;const e=this.nextHeadCell(t);return k(e)&&e.snake===this&&P(t)===e.direction?!1:(this._direction=t,this._refreshHeadCell(),!0)}doStep(){if(this.isDead)return;const t=this.nextHeadCell(this._direction);switch(t){case l.EMPTY:this._doHeadStep(),this.doTailStep();break;case l.FOOD:this._doHeadStep();break;case l.BOUNDARY:case l.BRICK:break;case l.POISON:this._doHeadStep(),this.doTailStep(),this.doTailStep();break;default:this._bite(t.snake)}}_doHeadStep(){this.isDead||(this._headX+=S(this._direction),this._headY+=m(this._direction),this._refreshHeadCell(),this._length++)}doHeadStep(){const t=this.nextHeadCell(this._direction);if(k(t))throw new Error("Doing head step into snake cell");t!==l.BOUNDARY&&this._doHeadStep()}_doTailStep(t){if(this.isDead)return;const e=this.field.getCell(this._tailX,this._tailY);if(!k(e))throw Error("Tail step is not valid! Tail cell is not snake.");this.field.setCell(this._tailX,this._tailY,t),this._length--,this._length>0&&(this._tailX+=S(e.direction),this._tailY+=m(e.direction))}doTailStep(){this._doTailStep(l.EMPTY)}dropFood(){this._doTailStep(l.FOOD)}cut(t,e){const s=this.field.getCell(t,e);if(k(s)&&s.snake===this){for(;this._tailX!==t||this._tailY!==e;)this.dropFood();this.dropFood()}}_bite(t){this.isDead||(t.cut(this._headX+S(this._direction),this._headY+m(this._direction)),this._doHeadStep())}}class T{constructor(t,e){a(this,"snake");a(this,"direction");this.snake=t,this.direction=e}}var l=(i=>(i[i.EMPTY=0]="EMPTY",i[i.FOOD=1]="FOOD",i[i.BRICK=2]="BRICK",i[i.POISON=3]="POISON",i[i.BOUNDARY=4]="BOUNDARY",i))(l||{});const k=i=>i instanceof T,g=(i,t)=>Math.floor(Math.random()*(t-i)+i),O=(i,t,e,s)=>`hsla(${i} ${t}% ${e}% ${s??""})`,b=()=>{switch(g(0,100)%4){case 0:return o.UP;case 1:return o.RIGHT;case 2:return o.DOWN;case 3:return o.LEFT;default:return o.UP}};class v{constructor(t){a(this,"snakeControl");this.snakeControl=t}doNextAction(){if(this.snakeControl.length===0)return;let t=b();const{headX:e,headY:s,tailX:r,tailY:n}=this.snakeControl;for(let h=0;h<3;++h){const _=e+S(t),c=s+m(t),u=this.snakeControl.getCell(_,c);if(this.snakeControl.isSelfSnake(u)){if(t===u.direction||_===r&&c===n)break;t=P(u.direction)}else if(u===l.BOUNDARY||u===l.BRICK){t=b();break}else break}this.snakeControl.onArrowPressed(t)}}class H{constructor(t,e){a(this,"width");a(this,"height");a(this,"_cells");if(t<=0||e<=0)throw new Error("Dimensions of field must be grater than zero");this.width=t,this.height=e,this._cells=new Array(t*e);for(let s=0;s<this._cells.length;++s)this._cells[s]=l.EMPTY}getCell(t,e){return t<0||e<0||t>=this.width||e>=this.height?l.BOUNDARY:this._cells[t+e*this.width]}setCell(t,e,s){t<0||e<0||t>=this.width||e>=this.height||(this._cells[t+e*this.width]=s)}}class y{constructor(t,e=null){a(this,"_snake");a(this,"style");this._snake=t,this.style=e}get headX(){return this._snake.headX}get headY(){return this._snake.headY}get tailX(){return this._snake.tailX}get tailY(){return this._snake.tailY}get length(){return this._snake.length}get direction(){return this._snake.direction}getCell(t,e){return this._snake.field.getCell(t,e)}isSelfSnake(t){return k(t)&&this._snake===t.snake}onArrowPressed(t){this._snake.changeDirection(t)}doPlayerStep(){var t;(t=this._snake)==null||t.doStep()}}class N{constructor(t){a(this,"_field");a(this,"_snakes");this._field=t,this._snakes=[]}get count(){return this._snakes.length}createSnake(t,e,s,r=null){const n=new D(this._field,t,e,s),h=new y(n,r);return this._snakes.push(h),h}contains(t){return t instanceof y&&this._snakes.includes(t)}killSnake(t){if(t instanceof y){const e=this._snakes.indexOf(t);e>=0&&this._snakes.splice(e,1)}}tick(){for(const t of this._snakes)t._snake.doStep()}drawAll(t){for(const e of this._snakes){const s=e._snake;if(s.length>0){let r=s.tailX,n=s.tailY,h=s.length-1,_;for(;h>=0;){const c=this._field.getCell(r,n);if(!k(c))throw new Error("Snake is corrupted!!!");switch(t.drawSnakeCell(e.style,r,n,h,c.direction,_),_=c.direction,h--,_){case o.UP:n--;break;case o.RIGHT:r++;break;case o.DOWN:n++;break;case o.LEFT:r--;break}}}}}}class Y{constructor(t,e){a(this,"_field");a(this,"_snakesRegistry");a(this,"_playerSnake");a(this,"output");this._field=new H(t,e),this._snakesRegistry=new N(this._field),this._playerSnake=null,this.output=null}get width(){return this._field.width}get height(){return this._field.height}get snakesCount(){return this._snakesRegistry.count}get isPlayerAlive(){return this._playerSnake!==null}putCell(t,e,s){this._field.setCell(t,e,s)}getCell(t,e){return this._field.getCell(t,e)}createSnake(t,e,s,r=null){return this._snakesRegistry.createSnake(t,e,s,r)}createPlayerSnake(t,e,s,r=null){return this._playerSnake=this._snakesRegistry.createSnake(t,e,s,r),this._playerSnake}get playerSnake(){return this._playerSnake}tick(){this._snakesRegistry.tick()}draw(){if(this.output!==null){this.output.clearWithBackground();for(let t=0;t<this._field.height;++t)for(let e=0;e<this._field.width;++e){const s=this._field.getCell(e,t);k(s)||this.output.drawCell(e,t,s)}this._snakesRegistry.drawAll(this.output)}}}const I={background:"black",food:"gray",brick:"brown",poison:"purple"},A={color:"green",headColor:"magenta"};class E{constructor(t,e,s,r=I){a(this,"_canvas");a(this,"ctx");a(this,"theme");a(this,"gameWidth");a(this,"gameHeight");this._canvas=t,this.gameWidth=e,this.gameHeight=s,this.theme=r;const n=this._canvas.getContext("2d");if(n==null)throw new Error("Failed to get 2d context from canvas");this.ctx=n,this.ctx.fillStyle=this.theme.background}get width(){return this._canvas.width}get height(){return this._canvas.height}clearWithBackground(){this.ctx.fillStyle=this.theme.background,this.ctx.fillRect(0,0,this.width,this.height)}drawCellRect(t,e,s){const r=this.width/this.gameWidth,n=this.height/this.gameHeight,h=t*r,_=e*n;this.ctx.fillStyle=s,this.ctx.fillRect(h,_,r,n)}drawCell(t,e,s){if(s===l.EMPTY)return;let r=this.theme.background;switch(s){case l.FOOD:r=this.theme.food;break;case l.BRICK:r=this.theme.brick;break;case l.POISON:r=this.theme.poison;break}this.drawCellRect(t,e,r)}drawSnakeCell(t,e,s,r,n,h){const _=t??A,c=this.width/this.gameWidth,u=this.height/this.gameHeight,f=e*c,d=s*u,w=r===0?_.headColor:_.color;switch(this.ctx.fillStyle=w??_.color,n){case o.LEFT:this.ctx.beginPath(),this.ctx.moveTo(f,d+u/2),this.ctx.lineTo(f+c,d),this.ctx.lineTo(f+c,d+u),this.ctx.fill();break;case o.RIGHT:this.ctx.beginPath(),this.ctx.moveTo(f,d),this.ctx.lineTo(f+c,d+u/2),this.ctx.lineTo(f,d+u),this.ctx.fill();break;case o.UP:this.ctx.beginPath(),this.ctx.moveTo(f,d+u),this.ctx.lineTo(f+c/2,d),this.ctx.lineTo(f+c,d+u),this.ctx.fill();break;case o.DOWN:this.ctx.beginPath(),this.ctx.moveTo(f,d),this.ctx.lineTo(f+c,d),this.ctx.lineTo(f+c/2,d+u),this.ctx.fill();break;default:this.ctx.fillRect(f,d,c,u);break}}}const F="canvas",U="canvas-container";class X{constructor(t,e){a(this,"_canvas");a(this,"viewport");const{width:s,height:r}=t,n=document.getElementById(F);if(n==null)throw new Error("Canvas element is not found");this._canvas=n,this.viewport=new E(n,s,r,e);const h=s/r,_=new ResizeObserver(u=>{for(const f of u){const{width:d,height:w}=f.contentRect;if(d===0||w===0)return;d/w<h?(n.width=d,n.height=d/h):(n.width=w*h,n.height=w)}t.draw()}),c=document.getElementById(U);if(c===null)throw new Error("Canvas container element is not found");_.observe(c),t.output=this.viewport}}const p=120,C=90,B=2e3,L=50,W=20,G=()=>{const i=g(0,360),t=i+60;return{color:O(i,100,40),headColor:O(t,100,50)}},M={background:"black",food:O(0,0,30),brick:O(0,60,40),poison:O(300,100,10)};class K{constructor(){a(this,"game");a(this,"canvasContainer");a(this,"bots");this.game=new Y(p,C),this.canvasContainer=new X(this.game,M),this.bots=[]}_initializeField(){for(let t=0;t<B;++t)this.game.putCell(g(0,p),g(0,C),l.FOOD);for(let t=0;t<L;++t)this.game.putCell(g(0,p),g(0,C),l.BRICK);for(let t=0;t<W;++t)this.game.putCell(g(0,p),g(0,C),l.POISON)}_initializePlayer(){const t=this.game.createPlayerSnake(Math.floor(p/2),Math.floor(C/2),o.UP),e=s=>{if(!(s.isComposing||s.keyCode===229)){switch(s.key){case"Down":case"ArrowDown":t.onArrowPressed(o.DOWN),t.doPlayerStep();break;case"Up":case"ArrowUp":t.onArrowPressed(o.UP),t.doPlayerStep();break;case"Left":case"ArrowLeft":t.onArrowPressed(o.LEFT),t.doPlayerStep();break;case"Right":case"ArrowRight":t.onArrowPressed(o.RIGHT),t.doPlayerStep();break}this.game.draw()}};window.addEventListener("keydown",e)}_initializeBots(){for(let t=0;t<20;++t){const e=g(0,p),s=g(0,C);if(!k(this.game.getCell(e,s))){const r=this.game.createSnake(e,s,o.UP,G());this.bots.push(new v(r))}}}_startTimer(){setInterval(()=>{for(const t of this.bots)t.doNextAction();this.game.tick(),this.game.draw()},200)}start(){this._initializeField(),this._initializePlayer(),this._initializeBots(),this._startTimer()}}const z=new K;z.start();
